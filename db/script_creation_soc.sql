-- DROP dans l'ordre inverse de création des dépendances
DROP TABLE IF EXISTS O_HOSP;
DROP TABLE IF EXISTS O_CONS;
DROP TABLE IF EXISTS O_TRET;
DROP TABLE IF EXISTS O_ADDR;
DROP TABLE IF EXISTS O_TELP;
DROP TABLE IF EXISTS O_STFF;
DROP TABLE IF EXISTS O_INDV;
DROP TABLE IF EXISTS R_MEDC;
DROP TABLE IF EXISTS R_ROOM;
DROP TABLE IF EXISTS R_PART;
DROP TABLE IF EXISTS T_SUIV_TRMT;
DROP TABLE IF EXISTS T_SUIV_RUN;


-- Tables d'exécution technique
CREATE TABLE T_SUIV_RUN (
    RUN_ID INTEGER PRIMARY KEY,
    RUN_STRT_DTTM TIMESTAMP NOT NULL,
    RUN_END_DTTM TIMESTAMP,
    RUN_STTS_CD VARCHAR(10) NOT NULL
);

CREATE TABLE T_SUIV_TRMT (
    EXEC_ID INTEGER PRIMARY KEY,
    RUN_ID INTEGER NOT NULL REFERENCES T_SUIV_RUN(RUN_ID),
    SCRPT_NAME VARCHAR(250) NOT NULL,
    EXEC_STRT_DTTM TIMESTAMP NOT NULL,
    EXEC_END_DTTM TIMESTAMP,
    EXEC_STTS_CD VARCHAR(10) NOT NULL
);

---------------------------------

-- Table de référence
CREATE TABLE R_PART (
    PART_ID INTEGER PRIMARY KEY,
    SRC_ID INTEGER NOT NULL,
    SRC_TYP VARCHAR(50) NOT NULL
);

-- CHAMBRE
CREATE TABLE R_ROOM (
    ROOM_NUM INTEGER PRIMARY KEY,
    ROOM_NAME VARCHAR(20) NOT NULL,
    FLOOR_NUM SMALLINT,
    BULD_NAME VARCHAR(20),
    ROOM_TYP VARCHAR(10),
    ROOM_DAY_RATE SMALLINT NOT NULL,
    CRTN_DT DATE NOT NULL,
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
);

-- MEDICAMENT
CREATE TABLE R_MEDC (
    MEDC_ID INTEGER PRIMARY KEY,
    MEDC_CD VARCHAR(10) NOT NULL,
    MEDC_NAME VARCHAR(250),
    MEDC_COND VARCHAR(100),
    MEDC_CATG VARCHAR(100) NOT NULL,
    MANF_BRND VARCHAR(100) NOT NULL,
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
);

-- INDIVIDU
CREATE TABLE O_INDV (
    PART_ID INTEGER PRIMARY KEY REFERENCES R_PART(PART_ID),
    INDV_NAME VARCHAR(100) NOT NULL,
    INDV_FIRS_NAME VARCHAR(100) NOT NULL,
    INDV_STTS_CD VARCHAR(10) NOT NULL,
    CRTN_DTTM TIMESTAMP NOT NULL,
    UPDT_DTTM TIMESTAMP NOT NULL,
    BIRT_DT DATE,
    BIRT_CITY VARCHAR(100),
    BIRT_CNTR VARCHAR(100),
    SOCL_NUM VARCHAR(15),
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
);

-- PERSONNEL
CREATE TABLE O_STFF (
    PART_ID INTEGER PRIMARY KEY REFERENCES R_PART(PART_ID),
    WORK_STRT_DTTM TIMESTAMP NOT NULL,
    WORK_END_DTTM TIMESTAMP,
    WORK_END_RESN VARCHAR(100),
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
);

-- CONTACTS
CREATE TABLE O_TELP (
    PART_ID INTEGER NOT NULL REFERENCES R_PART(PART_ID),
    CNTR_IND VARCHAR(5),
    TELP_NUM VARCHAR(20) NOT NULL,
    STRT_VALD_DTTM TIMESTAMP NOT NULL,
    END_VALD_DTTM TIMESTAMP NOT NULL,
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID),
    PRIMARY KEY (PART_ID, STRT_VALD_DTTM)
);

-- ADRESSE
CREATE TABLE O_ADDR (
    PART_ID INTEGER NOT NULL REFERENCES R_PART(PART_ID),
    STRT_NUM VARCHAR(10) NOT NULL,
    STRT_DSC VARCHAR(250) NOT NULL,
    COMP_STRT VARCHAR(250),
    POST_CD VARCHAR(10) NOT NULL,
    CITY_NAME VARCHAR(100),
    CNTR_NAME VARCHAR(100),
    STRT_VALD_DTTM TIMESTAMP NOT NULL,
    END_VALD_DTTM TIMESTAMP NOT NULL,
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID),
    PRIMARY KEY (PART_ID, STRT_VALD_DTTM)
);

-- TRAITEMENT
CREATE TABLE O_TRET (
    TRET_ID INTEGER PRIMARY KEY, -- Voir note plus bas
    MEDC_ID INTEGER REFERENCES R_MEDC(MEDC_ID),
    MEDC_QTY SMALLINT,
    DOSG_DSC VARCHAR(100) NOT NULL,
    CONS_ID INTEGER NOT NULL,
    TRET_CRTN_DTTM TIMESTAMP NOT NULL,
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
    -- Note: TRET_ID est une combinaison logique de CD_MEDICAMENT, CATG_MEDICAMENT, MARQUE_FABRI,
    -- mais ici il est représenté en tant que clé technique.
);

-- CONSULTATION
CREATE TABLE O_CONS (
    CONS_ID INTEGER PRIMARY KEY,
    STFF_ID INTEGER NOT NULL REFERENCES O_STFF(PART_ID),
    PATN_ID INTEGER NOT NULL UNIQUE REFERENCES R_PART(PART_ID),
    CONS_STRT_DTTM TIMESTAMP NOT NULL,
    CONS_END_DTTM TIMESTAMP NOT NULL,
    PATN_WEGHT INTEGER NOT NULL,
    PATN_TEMP INTEGER,
    TEMP_UNIT VARCHAR(15),
    BLD_PRSS INTEGER,
    PATH_DSC VARCHAR(250),
    DIBT_IND BOOLEAN,
    TRET_ID INTEGER, -- À confirmer si timestamp est une erreur
    HOSP_IND BOOLEAN,
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
);

-- HOSPITALISATION
CREATE TABLE O_HOSP (
    HOSP_ID INTEGER PRIMARY KEY,
    CONS_ID INTEGER NOT NULL UNIQUE REFERENCES O_CONS(CONS_ID),
    ROOM_NUM SMALLINT NOT NULL REFERENCES R_ROOM(ROOM_NUM),
    HOSP_STRT_DTTM TIMESTAMP NOT NULL,
    HOSP_END_DTTM TIMESTAMP,
    HOSP_FINL_RATE TIMESTAMP,
    STFF_ID INTEGER NOT NULL REFERENCES O_STFF(PART_ID),
    EXEC_ID INTEGER NOT NULL REFERENCES T_SUIV_TRMT(EXEC_ID)
);